version: '3'
services:
  redis:
    image: redis:6.0.8
    hostname: redis
    container_name: docker-redis
    volumes:
      - ./redis/data:/data:rw
      - ./redis/conf/redis.conf:/etc/redis/redis.conf:rw
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    ports:
      - 6379:6379
    extra_hosts:
     - "somehost:162.242.195.82"
     - "otherhost:50.31.209.229"
    networks:
      - mynet


  mysql:
    image: mysql:8.0
    hostname: mysql8
    container_name: docker-mysql
    volumes:
      - ./mysql/conf/my.cnf:/etc/my.cnf:rw
      - ./mysql/logs:/logs:rw
      - ./mysql/data:/var/lib/mysql:rw
    ports:
      - 3306:3306
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=test"
      - "TZ=Asia/Shanghai"
    networks:
      - mynet

  rabbitmq:
    image: rabbitmq:3.7.7-management
    hostname: rabbitmq
    container_name: docker-rabbitmq
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - "RABBITMQ_DEFAULT_VHOST=/"
      - "RABBITMQ_DEFAULT_USER=admin"
      - "RABBITMQ_DEFAULT_PASS=admin"
    networks:
      - mynet

  es:
    image: elasticsearch:7.9.2
    hostname: es
    container_name: docker-es
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "discovery.type=single-node"
    networks:
      - mynet

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    container_name: docker-zookeeper
    volumes:
      - ./zookeeper/data:/data
    ports:
      - 2181:2181
    networks:
      - mynet

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: docker-kafka
    volumes:
      - ./kafka/logs:/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.130.100:9092
      KAFKA_CREATE_TOPICS: "brady:2:0"   #kafka启动后初始化一个有2个partition(分区)0个副本名叫kafeidou的topic
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper
    networks:
      - mynet

  kafka-manage:
    image: sheepkiller/kafka-manager
    hostname: kafka-manage
    container_name: docker-kafka-manager
    ports:
      - 9000:9000
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
    networks:
      - mynet

networks:
  mynet:
    driver: bridge