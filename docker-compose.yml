version: '3.5'
services:

  redis:
    image: redis:${REDIS_VERSION}
    hostname: redis
    container_name: docker-redis
    restart: always
    volumes:
      - ${DATA_DIR}/redis:/data:rw
      - ${REDIS_CONF_FILE}:/etc/redis/redis.conf:rw
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    ports:
      - ${REDIS_HOST_PORT}:6379
    extra_hosts:
      - "host:162.242.195.82"
    environment:
      - "TZ=${TZ}"
    networks:
      - default



  mysql:
    image: mysql:${MYSQL_VERSION}
    hostname: mysql
    container_name: docker-mysql
    restart: always
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/my.cnf:rw
      - ${MYSQL_LOGS_FILE}/mysql:/logs:rw
      - ${DATA_DIR}/mysql:/var/lib/mysql:rw
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "TZ=${TZ}"
    networks:
      - default

  mongo:
    container_name: docker-mongo
    image: mongo:${MONGODB_VERSION}
    restart: always
    privileged: true
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_INITDB_ROOT_PASSWORD}
      TZ: ${TZ}
    volumes:
      - ${DATA_DIR}/mongo:/data/db
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    networks:
      - default

#  adminmongo:
#    image: mrvautin/adminmongo
#    container_name: docker-adminmongo
#    ports:
#      - "${ADMINMONGO_HOST_PORT}:1234"
#    environment:
#      - HOST=0.0.0.0
#      - DB_HOST=mongodb
#      - DB_PORT=27017
#    networks:
#      - default

  eureka:
    container_name: docker-eureka
    image: sovandocker/eureka-server:2.0.0
    restart: always
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "8761:8761"
    networks:
      - default


  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    hostname: rabbitmq
    container_name: docker-rabbitmq
    restart: always
    volumes:
      - ${DATA_DIR}/rabbitmq:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_HOST_PORT_A}:5672
      - ${RABBITMQ_HOST_PORT_B}:15672
    environment:
      - "RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}"
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}"
    networks:
      - default

  redis-cluster:
    image: grokzen/redis-cluster:latest
    hostname: docker-redis-cluster
    restart: always
    environment:
      - "IP=0.0.0.0"
    ports:
      - 7000:7000
      - 7001:7001
      - 7002:7002
      - 7003:7003
      - 7004:7004
      - 7005:7005
    networks:
      - default
  etcd:
      hostname: etcd
      image: bitnami/etcd:3
      container_name: docker-etcd
      restart: always
      ports:
        - "2379:2379"
        - "2380:2380"
        - "4001:4001"
        - "6001:7001"
      user: root
      volumes:
        - ${DATA_DIR}/etcd:/opt/bitnami/etcd/data
      environment:
        - "ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379"
        - "ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379"
        - "ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380"
        - "ETCD_INITIAL_ADVERTISE_PEER_URLS=http://0.0.0.0:2380"
        - "ALLOW_NONE_AUTHENTICATION=yes"
        - "ETCD_INITIAL_CLUSTER=node1=http://0.0.0.0:2380"
        - "ETCD_NAME=node1"
        - "ETCD_DATA_DIR=/opt/bitnami/etcd/data"
      networks:
        - default

  zookeeper:
    container_name: docker-zookeeper
    image: wurstmeister/zookeeper
    restart: always
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "2181:2181"
    networks:
      - default

  kafka:
    container_name: docker-kafka
    image: wurstmeister/kafka
    restart: always
    privileged: true
    environment:
      TZ: ${TZ}
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.33.10:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    links:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - default
networks:
  default:
    driver: bridge
